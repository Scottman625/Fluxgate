# name: Deploy to Google Cloud Run

# on:
#   push:
#     branches: [ master ]
#   workflow_dispatch:

# env:
#   PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
#   SERVICE_NAME: queue-system
#   REGION: asia-east1

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Google Cloud CLI
#       uses: google-github-actions/setup-gcloud@v1
#       with:
#         project_id: ${{ env.PROJECT_ID }}
#         service_account_key: ${{ secrets.GCP_SA_KEY }}
#         export_default_credentials: true

#     - name: Configure Docker for GCR
#       run: gcloud auth configure-docker

#     - name: Build and push to GCR
#       run: |
#         docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
#         docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

#     - name: Deploy to Cloud Run
#       run: |
#         gcloud run deploy ${{ env.SERVICE_NAME }} \
#           --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
#           --platform managed \
#           --region ${{ env.REGION }} \
#           --allow-unauthenticated \
#           --set-env-vars "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
#           --set-env-vars "REDIS_ADDR=${{ secrets.REDIS_ADDR }}"

#     - name: Health check
#       run: |
#         SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.REGION }} --format='value(status.url)')
#         curl -f $SERVICE_URL/health || exit 1
